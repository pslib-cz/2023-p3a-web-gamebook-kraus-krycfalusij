@page
@model lost_on_island.Pages.Game.ShipwreckModel
@{
    var jsAvailableConnectionsIds = Json.Serialize(Model.AvailableConnectionsIds);
}

<div class="game-container" style="background-image: url('@Url.Content("~/Images/location-shipwreck.png")')">
    <div style="background-image: url('@Url.Content("~/Images/location-shipwreck.png")')" class="background-overlay"></div>

    <div class="location__title__container">
        <h1 class="location__title--font location__title--header">Loď</h1>
        <p class="location__title--font location__title--description">Zde můžeš opravovat svou loď</p>
    </div>


    <div class="map_overlay"></div>
    <div class="toggler map__toggler" onclick="enableMap()">
        <img class="toggler__icon" src="/Images/Icons/map.png" />
    </div>
    <div class="map__container">
        <div class="map__header__section">
            <span class="map__header__close-button" onclick="disableMap()"></span>
            <p class="map__header">Mapa</p>
            <div></div>
        </div>
        <div class="map__image__section">
            <form method="post" asp-page-handler="HandleChangeLocation">
                <p onclick="changeLocation(this, 2)" class="location__tag tag--shipwreck @(Model.AvailableConnectionsIds.Contains(2) ? "tag--green" : Model.CurrentLocation.Id == 2 ? "tag--yellow" : "tag--red")">
                    Loď
                </p>
                <p onclick="changeLocation(this, 3)" class="location__tag tag--beach @(Model.AvailableConnectionsIds.Contains(3) ? "tag--green" : Model.CurrentLocation.Id == 3 ? "tag--yellow" : "tag--red")">
                    Pláž
                </p>
                <p onclick="changeLocation(this, 4)" class="location__tag tag--field @(Model.AvailableConnectionsIds.Contains(4) ? "tag--green" : Model.CurrentLocation.Id == 4 ? "tag--yellow" : "tag--red")">
                    Louka
                </p>
                <p onclick="changeLocation(this, 5)" class="location__tag tag--forest @(Model.AvailableConnectionsIds.Contains(5) ? "tag--green" : Model.CurrentLocation.Id == 5 ? "tag--yellow" : "tag--red")">
                    Les
                </p>
                <p onclick="changeLocation(this, 6)" class="location__tag tag--cave @(Model.AvailableConnectionsIds.Contains(6) ? "tag--green" : Model.CurrentLocation.Id == 6 ? "tag--yellow" : "tag--red")">
                    Jeskyně
                </p>
                <p onclick="changeLocation(this, 7)" class="location__tag tag--deep-forest @(Model.AvailableConnectionsIds.Contains(7) ? "tag--green" : Model.CurrentLocation.Id == 7 ? "tag--yellow" : "tag--red")">
                    Hluboký les
                </p>
                <input type="hidden" name="locationIdInputValue" />
            </form>
        </div>
        <div class="map__description__section">
            <p class="map__description">(? Kliknutím na místo se přesměrujete na danou lokaci, pokud je dostupná.)</p>
        </div>
    </div>

    <div class="inventory_overlay"></div>
    <div class="toggler inventory__toggler" onclick="enableInventory()">
        <img class="toggler__icon" src="/Images/Icons/inventory.png" />
    </div>
    <div class="inventory__container">


        </div>
    </div>



    <div class="game-stats">
        <div class="game-stats__energy">
            <span class="icon--energy"></span>
            Energie: @Model.gameState.Energy/20
        </div>
        <div class="game-stats__health">
            <span class="icon--health"></span>
            Zdraví: @Model.gameState.Health/20
        </div>
        <div class="game-stats__turns">
            Počet tahů: @Model.gameState.Turns
        </div>
        
        <div class="badges-list">
            <div class="single-tool__badge" style="background-image: url('@(Model.gameState.Sword ? "/Images/Icons/sword-badge.png" : "/Images/Icons/sword-badge-disabled.png")')"></div>
            <div class="single-tool__badge" style="background-image: url('@(Model.gameState.Axe ? "/Images/Icons/axe-badge.png" : "/Images/Icons/axe-badge-disabled.png")')"></div>
            <div class="single-tool__badge" style="background-image: url('@(Model.gameState.Pickaxe ? "/Images/Icons/pickaxe-badge.png" : "/Images/Icons/pickaxe-badge-disabled.png")')"></div>
            <div class="single-tool__badge" style="background-image: url('@(Model.gameState.Shears ? "/Images/Icons/shears-badge.png" : "/Images/Icons/shears-badge-disabled.png")')"></div>
            <div class="single-tool__badge" style="background-image: url('@(Model.gameState.Backpack ? "/Images/Icons/backpack-badge.png" : "/Images/Icons/backpack-badge-disabled.png")')"></div>
        </div>
           
    </div>

    <script>
    var cardFlipped = false;
    const availableConnectionsIds = @Html.Raw(jsAvailableConnectionsIds);

    const handleBadgeClick = (div, badgeType) => {
        var formBadge = div.closest("form");
        formBadge.querySelector("[name='badgeType']").value = badgeType;
        formBadge.submit();
    }
        const changeLocation = (div, locationId) => {
            if (locationId === 3) {
                var formLocation = div.closest("form");
                formLocation.querySelector("[name='locationIdInputValue']").value = locationId;
                formLocation.submit();
            }
        };

    const enableMap = () => {
        var map = document.querySelector(".map__container");
        map.classList.add("map__container__enabled");
        var overlay = document.querySelector(".map_overlay");
        overlay.classList.add("map_overlay--active");
    }

    const disableMap = () => {
        var map = document.querySelector(".map__container");
        map.classList.remove("map__container__enabled");
        var overlay = document.querySelector(".map_overlay");
        overlay.classList.remove("map_overlay--active");
    }

    const enableInventory = () => {
        var inventory = document.querySelector(".inventory__container");
        inventory.classList.add("inventory__container__enabled");
        var overlay = document.querySelector(".inventory_overlay");
        overlay.classList.add("inventory_overlay--active");
    }

    const disableInventory = () => {
        var inventory = document.querySelector(".inventory__container");
        inventory.classList.remove("inventory__container__enabled");
        var overlay = document.querySelector(".inventory_overlay");
        overlay.classList.remove("inventory_overlay--active");
    }

</script>
</div>