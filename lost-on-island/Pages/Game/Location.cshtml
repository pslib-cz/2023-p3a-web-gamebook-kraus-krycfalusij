@page
@model lost_on_island.Pages.Game.LocationModel
@{
    var gameState = Model.GameState;
}


<div class="game-container">
    <div style="background-image: url('@Url.Content($"~/../{Model.CurrentLocation.ImagePath}")')" class="background-overlay"></div>

    <div class="location__title__container">
        <h1 class="location__title--font location__title--header">@Model.CurrentLocation.Title</h1>
        <p class="location__title--font location__title--description">@Model.CurrentLocation.Description</p>
    </div>

    <div class="card-pack">
        <form method="post" asp-page-handler="HandleCardClick" class="card-form">

            <div class="card pack-of-cards"></div>
            <div class="card" onclick="handleCardAnimation(this)">
                <div class="card--inner">
                    <div class="card--back">
                    </div>
                    <div class="card--front" onclick="handleCardClick(this)">
                        <h3>@Model.SingleLocationCard.Title</h3>
                        <p>Šance: @Model.SingleLocationCard.Probability%</p>
                        <p>@Model.SingleLocationCard.Description</p>
                        <p>+ @Model.SingleLocationCard.ItemAdd</p>
                        <img src="@Model.SingleLocationCard.Img" alt="Card Image" />
                    </div>
                </div>
            </div>
        </form>
        <form method="post" asp-page-handler="HandleCardClick" class="card-form">

            <div class="card pack-of-cards"></div>
            <div class="card" onclick="handleCardAnimation(this)">
                <div class="card--inner">
                    <div class="card--back">
                    </div>
                    <div class="card--front" onclick="handleCardClick(this)">
                        <h3>@Model.SingleLocationCard.Title</h3>
                        <p>Šance: @Model.SingleLocationCard.Probability%</p>
                        <p>@Model.SingleLocationCard.Description</p>
                        <p>+ @Model.SingleLocationCard.ItemAdd</p>
                    </div>
                </div>
            </div>
        </form>
        <form method="post" asp-page-handler="HandleCardClick" class="card-form">

            <div class="card pack-of-cards"></div>
            <div class="card" onclick="handleCardAnimation(this)">
                <div class="card--inner">
                    <div class="card--back">
                    </div>
                    <div class="card--front" onclick="handleCardClick(this)">
                        <h3>@Model.SingleLocationCard.Title</h3>
                        <p>Šance: @Model.SingleLocationCard.Probability%</p>
                        <p>@Model.SingleLocationCard.Description</p>
                        <p>+ @Model.SingleLocationCard.ItemAdd</p>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div class="navigation-buttons">
            @foreach (var connection in Model.AvailableConnections)
            {
                if (connection.ToLocationId != Model.CurrentLocation.Id)
                {
                    <button type="button" class="nav-button" onclick="location.href='@Url.Page("/Game/Location", new { locationId = connection.ToLocationId })'">
                        @connection.Description
                    </button>
                }
            }
     </div>

    <div class="game-stats">
        <div class="game-stats__energy">
            <span class="icon--energy"></span>
            Energie: @gameState.Energy/20
        </div>
        <div class="game-stats__health">
            <span class="icon--health"></span>
            Zdraví: @gameState.Health/20
        </div>
        <div class="game-stats__turns">
            Počet tahů: @gameState.Turns
        </div>
        <form method="post" asp-page-handler="HandleBadgeClick" class="badges-list">
            <div onclick="handleBadgeClick(this, 'Sword')" class="single-tool__badge" style="background-image: url('@(gameState.Sword ? "/Images/Icons/sword-badge.png" : "/Images/Icons/sword-badge-disabled.png")')"></div>
            <div onclick="handleBadgeClick(this, 'Axe')" class="single-tool__badge" style="background-image: url('@(gameState.Axe ? "/Images/Icons/axe-badge.png" : "/Images/Icons/axe-badge-disabled.png")')"></div>
            <div onclick="handleBadgeClick(this, 'Pickaxe')" class="single-tool__badge" style="background-image: url('@(gameState.Pickaxe ? "/Images/Icons/pickaxe-badge.png" : "/Images/Icons/pickaxe-badge-disabled.png")')"></div>
            <div onclick="handleBadgeClick(this, 'Shears')" class="single-tool__badge" style="background-image: url('@(gameState.Shears ? "/Images/Icons/shears-badge.png" : "/Images/Icons/shears-badge-disabled.png")')"></div>
            <div onclick="handleBadgeClick(this, 'Backpack')" class="single-tool__badge" style="background-image: url('@(gameState.Backpack ? "/Images/Icons/backpack-badge.png" : "/Images/Icons/backpack-badge-disabled.png")')"></div>
            <input type="hidden" name="badgeType" />
        </form>
    </div>
</div>

<script>
    function handleCardAnimation(card) {
        card.classList.add("flipped");
        var cards = document.querySelectorAll('.card');
        cards.forEach(function (cardElement) {
            if (cardElement !== card) {
                cardElement.style.pointerEvents = 'none'; // Zabrání kliknutí na kartu
            }
        });
    }
    function handleCardClick(card) {
        card.closest("form").submit();
    }
    function handleBadgeClick(div, badgeType) {
        var form = div.closest("form");
        form.querySelector("[name='badgeType']").value = badgeType;
        form.submit();
    }
</script>

